version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "0.0.0.0"]

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: dvd_rental_v2
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbit_mq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-wolfi:9.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      REDIS_ADDRESS: redis:6379
      POSTGRES_DSN: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/dvd_rental_v2?sslmode=disable
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
    depends_on:
      - redis
      - rabbitmq
      - postgres
      - mailhog
      - elasticsearch

volumes:
  pgdata:
  rabbitmq_data:
  elasticsearch_data:
